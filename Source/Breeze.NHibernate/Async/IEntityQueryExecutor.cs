//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Linq;
using Breeze.Core;

namespace Breeze.NHibernate
{
    using System.Threading.Tasks;
    using System.Threading;
    public partial interface IEntityQueryExecutor
    {

        /// <summary>
        /// Applies the <see cref="EntityQuery"/> data to the given NHibernate linq query and executes it.
        /// </summary>
        /// <param name="queryable">The NHibernate linq query.</param>
        /// <param name="queryString">The query string to apply.</param>
        /// <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        /// <returns>The applied query result.</returns>
        Task<QueryResult> ApplyAndExecuteAsync(IQueryable queryable, string queryString, CancellationToken cancellationToken = default(CancellationToken));
    }
}
